install.packages('RTransferEntropy')
install.packages('timeSeries')
install.packages('plot.matrix')
library(quantmod)
library(RTransferEntropy)
library(timeSeries)
library(plot.matrix)
library(dplyr)
library(tidyr)
library(ggplot2)

tickers <- c("DOGE-USD","BNB-USD","ADA-USD","XRP-USD", "ETH-USD", "LTC-USD", "BTC-USD", "TRX-USD")

GIADM <- NULL
for (ticker in tickers) {GIADM <- cbind(GIADM,    getSymbols.yahoo(ticker,from = "2018-01-01",to = "2023-08-25", periodicity = "daily", auto.assign = FALSE))}

ROCDM <- na.omit(ROC(Cl(GIADM)))

colSums(is.na(ROCDM))

DOGE = ROCDM[,c(1)]
BNB = ROCDM[,c(2)]
ADA = ROCDM[,c(3)]
XRP = ROCDM[,c(4)]
ETH = ROCDM[,c(5)]
LTC = ROCDM[,c(6)]
BTC = ROCDM[,c(7)]
TRX = ROCDM[,c(8)]

lx = 2 
ly = 2






factors <- c("DOGE", "BNB", "ADA", "XRP", "ETH", "LTC", "BTC", "TRX")


arrow_values <- matrix(0, nrow = length(factors), ncol = length(factors))

arrow_values[1,] <- c(0,0.0446,0.0264,0.0388,0.0302,0.027,0.026,0.0395)
arrow_values[2,] <- c(0.0408,0,0.0297,0.0291,0.0245,0.0307,0.0348,0.0374)
arrow_values[3,] <- c(0.0288,0.0264,0,0.0276,0,0,0.024,0.0348)
arrow_values[4,] <- c(0.0417,0.0288,0.0298,0,0.025,0.0281,0.0258,0.0365)
arrow_values[5,] <- c(0.0381,0.0287,0.0255,0.0249,0,0.0246,0.0226,0.027)
arrow_values[6,] <- c(0.0283,0.0302,0,0.0276,0,0,0,0.0397)
arrow_values[7,] <- c(0.0271,0.0252,0.0231,0,0,0,0,0.0313)
arrow_values[8,] <- c(0.0355,0.0364,0.0293,0.0347,0.0329,0.0304,0.0306,0)


library(igraph)
graph <- graph_from_adjacency_matrix(arrow_values, mode = "directed", weighted = TRUE)


color_scale <- colorRampPalette(c("red", "green"))(100)


layout <- layout_in_circle(graph)


plot(
  graph,
  layout = layout,
  vertex.label = factors,
  vertex.label.cex = 0.8,
  vertex.label.dist = 0.5,
  vertex.size = 30,
  edge.arrow.size = 1,
  edge.width = 3,  # Adjust line width
  edge.color = color_scale[cut(as.vector(arrow_values), breaks = 100)],
  main = "Arrows Color Represents Value",
  xlim = c(-1, 1), ylim = c(-1, 1)
)










values <- matrix(c(
  1, 0.0578, 0.0462, 0.0561, 0.0588, 0.0501, 0.0576, 0.0522,
  0.0588, 1, 1, 0.0536, 0.0429, 0.0509, 1, 0.0497,
  0.0533, 1, 1, 0.045, 0.042, 1, 1, 0.0476,
  0.0513, 1, 0.0405, 1, 0.039, 0.049, 0.0514, 0.0507,
  0.0567, 1, 1, 1, 1, 0.0472, 1, 1,
  0.0585, 0.0393, 1, 0.047, 0.0473, 1, 0.0568, 0.074,
  0.0552, 1, 1, 1, 0.0518, 0.0515, 1, 0.0534,
  0.0577, 0.0447, 0.0467, 0.0485, 0.0414, 0.0494, 1, 1
), nrow = 8, byrow = TRUE)


p_values <- matrix(c(
  1, 0, 0.0467, 0.0033, 0, 0.0267, 0.0033, 0.03,
  0.0067, 1, 0.19, 0.0033, 0.03, 0.02, 0.3533, 0.0233,
  0.0233, 0.1267, 1, 0.0367, 0.0233, 0.1967, 0.8233, 0.0333,
  0.0433, 0.45, 0.09, 1, 0.06, 0.0233, 0.0167, 0.0133,
  0.02, 0.2333, 0.1833, 0.2267, 1, 0.03, 0.2233, 0.1267,
  0.0133, 0.0967, 0.42, 0.0333, 0.0067, 1, 0.0033, 0,
  0.02, 0.3833, 0.2633, 0.1233, 0.0067, 0.01, 1, 0.02,
  0.03, 0.0733, 0.0333, 0.05, 0.0367, 0.0167, 0.1533, 1
), nrow = 8, byrow = TRUE)



rownames(values) <- colnames(values) <- rownames(p_values) <- colnames(p_values) <- c("DOGE", "BNB", "ADA", "XRP", "ETH", "LTC", "BTC", "TRX")


values_df <- data.frame(expand.grid(rownames(values), colnames(values)), value = as.vector(values))
p_values_df <- data.frame(expand.grid(rownames(p_values), colnames(p_values)), p_value = as.vector(p_values))


heatmap_data <- inner_join(values_df, p_values_df, by = c("Var1" = "Var1", "Var2" = "Var2"))


filtered_heatmap_data <- heatmap_data %>% filter(p_value < 0.1)


ggplot(filtered_heatmap_data, aes(x = Var1, y = Var2, fill = value, label = sprintf("%.4f", p_value))) +
  geom_tile(color = "black") +
  geom_text(color = "white", size = 3) +
  scale_fill_gradient(low = "red", high = "green") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
  xlab("Factors") +
  ylab("Factors")

ggplot(filtered_heatmap_data, aes(x = Var2, y = Var1, fill = value, label = sprintf("%.4f", p_value))) +
  geom_tile(color = "black") +
  geom_text(color = "white", size = 3) +
  scale_fill_gradient(low = "red", high = "green") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
  xlab("Factors") +
  ylab("Factors")





ggplot(filtered_heatmap_data, aes(y = factor(Var1, levels = c("DOGE", "BNB", "ADA", "XRP", "ETH", "LTC", "BTC", "TRX")), 
                                  x = factor(Var2, levels = c("DOGE", "BNB", "ADA", "XRP", "ETH", "LTC", "BTC", "TRX")), 
                                  fill = value)) +
  geom_tile(color = "black", width = 0.9, height = 0.9) +  # Add borders with space
  geom_text(aes(label = sprintf("%.4f", p_value)), vjust = 0.5, hjust = 0.5, color = "black") +
  scale_fill_gradient(low = "red", high = "green") +  # Red to green color scale
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
  ylab("Information transmitter") +  # Add y-axis label
  xlab("Information recipient")   # Add x-axis label

